// ИНКАПСУЛЯЦИЯ
public class SomePhone {
    private int year; // Модификатор private делает доступными поля только внутри данного класса.
    private String company; // Это означает, что получить доступ к private полям из вне невозможно,
    // как и нет возможности вызвать private методы.

    public SomePhone(int year, String company) {
        this.year = year;
        this.company = company;
    }

    private void openConnection() { // Модификатор private делает доступным метод класса только внутри данного класса.
        // Это означает, что вызвать private методы из вне невозможно.
        // Сокрытие доступа к методу openConnection,
        // оставляет нам также возможность к свободному изменению внутренней реализации этого метода,
        // так как этот метод гарантированно не используется другими объектами и не нарушит их работу.
        //findCommutator


        //openNewConnection...
    }

    public void call() {
        openConnection();
        System.out.println("Вызываю номер");
    }

    public void ring() {
        openConnection();
        System.out.println("Звонок вызова");
    }
    // Для работы с нашим объектом мы оставляем открытыми методы call и ring с помощью модификатора public.
    // Предоставление открытых методов для работы с объектом также является частью механизма инкапсуляции,
    // так как если полностью закрыть доступ к объекту – он станет бесполезным.
}
